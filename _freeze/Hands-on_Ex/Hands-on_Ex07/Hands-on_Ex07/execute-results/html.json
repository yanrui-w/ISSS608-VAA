{
  "hash": "fb2e9d91cfe93933b105725e77cb1cd4",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 7: Visualising and Analysing Geographic Data\"\nauthor: \"Wei Yanrui\"\ndate: \"February 28, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\neditor: visual\n---\n\n\n# 1. Roadmap for studying\n\n# 2. Visualzing: Choropleth Maps\n\n## 2.1 Overview\n\n**What is Choropleth Maps?**\n\n-   a type of map that uses colors to represent the magnitude of specific data values within certain areas, such as population density, income levels, or any other statistical data.\n\n**Why use Choropleth Maps?**\n\n-   Visual representation: shows the differences in data between geographical areas, allowing one to see at a glance where values are high or low.\n\n-   Easy to understand.\n\n-   Wide application: climate change, economic development, happy index, social issues, and other different fields.\n\n**How does it work?**\n\n-   Each area is filled with a color corresponding to its data value. Higher data values are usually represented by darker colors, while lower data values are represented by lighter colors.\n\n## 2.2 Getting Started\n\nIn this hands-on exercise, the key R package use is [tmap](https://cran.r-project.org/web/packages/tmap/) package in R. Beside tmap package, four other R packages will be used. They are:\n\n-   readr for importing delimited text file,\n-   tidyr for tidying data,\n-   dplyr for wrangling data and\n-   [sf](https://cran.r-project.org/web/packages/sf/) for handling geospatial data.\n\nTo install and load these packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap)\n```\n:::\n\n\n## 2.3 Importing Data\n\n### 2.3.1 The Data\n\nTwo data set will be used to create the choropleth map. They are:\n\n-   Master Plan 2014 Subzone Boundary (Web) (i.e. `MP14_SUBZONE_WEB_PL`) in ESRI shapefile format. It can be downloaded at [data.gov.sg](https://beta.data.gov.sg/) This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\n\n-   Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. `respopagesextod2011to2020.csv`). This is an aspatial data fie. It can be downloaded at [Department of Statistics, Singapore](https://www.singstat.gov.sg/). Although it does not contain any coordinates values, but itâ€™s PA and SZ fields can be used as unique identifiers to geocode to `MP14_SUBZONE_WEB_PL` shapefile.\n\n### 2.3.2 Importing Geospatial Data into R\n\nThe code chunk below uses the *st_read()* function of `sf` package to import `MP14_SUBZONE_WEB_PL` shapefile into R as a simple feature data frame called `mpsz`.\n\n**Simple Feature Data Frame**\n\n-   a data structure used for storing and manipulating spatial data.\n\n-   a standard for describing the geometries of spatial data, such as points (locations), lines (paths), polygons (areas), etc.\n\n-   allows data scientists and geographic information specialists to process and analyze geospatial data in a consistent manner across various GIS software and programming environments.\n\n-   Beyond the regular data columns (such as numeric, character, and logical values), a simple feature data frame includes at least one special column (known as the geometry column) that stores the spatial geometry data for each observation which enables the simple feature data frame to directly visualize and analyze spatial data within R, without the dependency on external GIS software.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn=\"data/geospatial\",\n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\yanrui-w\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n:::\n:::\n\n\n::: {.callout-note icon=\"false\"}\n## Code Notes\n\n1.  `dsn`: the data source name or directory where the geospatial files are located.\n\n2.  `layer`: the specific layer within the shapefile\n\n3.  **shapefile**: a popular geospatial vector data format that typically comprises several different files, which together define the attributes and geometric information of a map.\\\n    3.1 **.shp**: the main file that contains the geospatial geometry data.\\\n    3.2 **.shx**: the index file, which allows GIS programs to quickly find the geometries of the data.\\\n    3.3 **.dbf**: the attribute file that contains attribute data associated with each shape, stored in the dBASE format.\\\n    3.4 **.prf**: the projection file, which describes the coordinate system and projection information used by the geospatial data.\n:::\n\n### 2.3.3 Importing Attribute Data into R\n\n### 2.3.4 Data Preparation\n\n## 2.4\n\n## 2.5\n\n## 2.6\n\n# 3. Visualzing: Geospatial Point Data\n\n# 4. Analyzing: Analytical Mapping\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}