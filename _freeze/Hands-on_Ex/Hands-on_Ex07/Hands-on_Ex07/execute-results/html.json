{
  "hash": "123c6f5311ea1d6132fb9f4c265a43f5",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 7: Visualising and Analysing Geographic Data\"\nauthor: \"Wei Yanrui\"\ndate: \"February 28, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\neditor: visual\n---\n\n\n# 1. Roadmap for studying\n\n# 2. Visualzing: Choropleth Maps\n\n## 2.1 Overview\n\n**What is Choropleth Maps?**\n\n-   a type of map that uses colors to represent the magnitude of specific data values within certain areas, such as population density, income levels, or any other statistical data.\n\n**Why use Choropleth Maps?**\n\n-   Visual representation: shows the differences in data between geographical areas, allowing one to see at a glance where values are high or low.\n\n-   Easy to understand.\n\n-   Wide application: climate change, economic development, happy index, social issues, and other different fields.\n\n**How does it work?**\n\n-   Each area is filled with a color corresponding to its data value. Higher data values are usually represented by darker colors, while lower data values are represented by lighter colors.\n\n## 2.2 Getting Started\n\nIn this hands-on exercise, the key R package use is [tmap](https://cran.r-project.org/web/packages/tmap/) package in R. Beside tmap package, four other R packages will be used. They are:\n\n-   readr for importing delimited text file,\n-   tidyr for tidying data,\n-   dplyr for wrangling data and\n-   [sf](https://cran.r-project.org/web/packages/sf/) for handling geospatial data.\n\nTo install and load these packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap)\n```\n:::\n\n\n## 2.3 Importing Data\n\n### 2.3.1 The Data\n\nTwo data set will be used to create the choropleth map. They are:\n\n-   Master Plan 2014 Subzone Boundary (Web) (i.e. `MP14_SUBZONE_WEB_PL`) in ESRI shapefile format. It can be downloaded at [data.gov.sg](https://beta.data.gov.sg/) This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.\n\n-   Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. `respopagesextod2011to2020.csv`). This is an aspatial data fie. It can be downloaded at [Department of Statistics, Singapore](https://www.singstat.gov.sg/). Although it does not contain any coordinates values, but itâ€™s PA and SZ fields can be used as unique identifiers to geocode to `MP14_SUBZONE_WEB_PL` shapefile.\n\n### 2.3.2 Importing Geospatial Data into R\n\nThe code chunk below uses the *st_read()* function of `sf` package to import `MP14_SUBZONE_WEB_PL` shapefile into R as a simple feature data frame called `mpsz`.\n\n**Simple Feature Data Frame**\n\n-   a data structure used for storing and manipulating spatial data.\n\n-   a standard for describing the geometries of spatial data, such as points (locations), lines (paths), polygons (areas), etc.\n\n-   allows data scientists and geographic information specialists to process and analyze geospatial data in a consistent manner across various GIS software and programming environments.\n\n-   Beyond the regular data columns (such as numeric, character, and logical values), a simple feature data frame includes at least one special column (known as the geometry column) that stores the spatial geometry data for each observation which enables the simple feature data frame to directly visualize and analyze spatial data within R, without the dependency on external GIS software.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn=\"data/geospatial\",\n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\yanrui-w\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex07\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n:::\n:::\n\n\n::: {.callout-note icon=\"false\"}\n## Code Notes\n\n1.  `dsn`: the data source name or directory where the geospatial files are located.\n\n2.  `layer`: the specific layer within the shapefile\n\n3.  **shapefile**: a popular geospatial vector data format that typically comprises several different files, which together define the attributes and geometric information of a map.\\\n    3.1 **.shp**: the main file that contains the geospatial geometry data.\\\n    3.2 **.shx**: the index file, which allows GIS programs to quickly find the geometries of the data.\\\n    3.3 **.dbf**: the attribute file that contains attribute data associated with each shape, stored in the dBASE format.\\\n    3.4 **.prf**: the projection file, which describes the coordinate system and projection information used by the geospatial data.\n:::\n\nYou can examine the content of `mpsz` (first 10 records) by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n```\n:::\n:::\n\n\n### 2.3.3 Importing Attribute Data into R\n\nNext, we will import *respopagsex2011to2020.csv* file into RStudio and save the file into an R dataframe called *popagsex*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n```\n:::\n\n\n### 2.3.4 Data Preparation\n\nBefore a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\n-  YOUNG: age group 0 to 4 until age groyup 20 to 24,\n-  ECONOMY ACTIVE: age group 25-29 until age group 60-64,\n-  AGED: age group 65 and above,\n-  TOTAL: all age group, and\n-  DEPENDENCY: the ratio between young and aged against economy active group\n\n#### 2.3.4.1 Data Wrangling\n\nThe following data wrangling and transformation functions will be used:\n\n-  *pivot_wider()* of **tidyr** package, and\n-  *mutate(), filter(), group_by()* and *select()* of **dplyr** package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  filter(Time == 2020) %>%\n  group_by(PA,SZ,AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup() %>%\n  pivot_wider(names_from=AG,\n              values_from=POP) %>%\n  mutate(YOUNG=rowSums(.[3:6])\n         +rowSums(.[12])) %>%\n  mutate(`ECONOMY ACTIVE`=rowSums(.[7:11])\n         +rowSums(.[13:15])) %>%\n  mutate(`AGED`=rowSums(.[16:21])) %>%\n  mutate(`TOTAL`=rowSums(.[3:21])) %>%\n  mutate(`DEPENDENCY`=(`YOUNG`+`AGED`)/`ECONOMY ACTIVE`) %>%\n  select(`PA`,`SZ`,`YOUNG`,`ECONOMY ACTIVE`,`AGED`,`TOTAL`,`DEPENDENCY`)\n```\n:::\n\n\n#### 2.3.4.2 Joining the attribute data and geospatial data\n\n\n\n\n## 2.4\n\n## 2.5\n\n## 2.6\n\n# 3. Visualzing: Geospatial Point Data\n\n# 4. Analyzing: Analytical Mapping\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}